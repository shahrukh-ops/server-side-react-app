{"version":3,"sources":["components/Office.js","components/OfficeList.js","App.js","reportWebVitals.js","index.js"],"names":["Office","officeNumber","officeName","pendingBusiness","id","OfficeList","result","console","log","loading","offices","map","office","i","App","isSSR","ssrData","useState","err","setErr","setResult","useEffect","a","url","config","BackEndApi","apiurl","axios","get","data","getData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wcAYeA,EAVA,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,gBAC1C,OACE,sBAAKC,GAAIH,EAAT,UACE,iDAAoBA,KACpB,+CAAkBC,KAClB,mDAAsBC,SCUbE,EAdI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpB,OADAC,QAAQC,IAAIF,GACRA,EAAOG,QACF,6CAGL,8BACGH,EAAOI,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAClB,cAAC,EAAD,eAAoBD,GAAPC,S,yBCoBRC,EA1BH,SAAC,GAAuB,EAArBC,MAAqB,EAAdC,QAAe,IAAD,EACZC,oBAAS,GADG,mBAC3BC,EAD2B,KACtBC,EADsB,OAENF,mBAAS,CAAER,SAAS,EAAMC,QAAS,OAF7B,mBAE3BJ,EAF2B,KAEnBc,EAFmB,KAelC,OAZAC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,6DACRC,EAAMC,EAAOC,WAAWC,OADhB,kBAGOC,IAAMC,IAAIL,GAHjB,OAGRjB,EAHQ,OAIZc,EAAU,CAAEX,SAAS,EAAOC,QAASJ,EAAOuB,OAJhC,gDAMZV,EAAO,EAAD,IANM,yDAAH,qDASbW,KACC,IACCZ,EACK,yCAAYA,KAGjB,8BACE,cAAC,EAAD,CAAYZ,OAAQA,OCbbyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.303e0d0f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Office = ({ officeNumber, officeName, pendingBusiness}) => {\r\n  return (\r\n    <div id={officeNumber}>\r\n      <h1>OFFICE-NUMBER: {officeNumber}</h1>\r\n      <h1>OFFICE-NAME: {officeName}</h1>\r\n      <p>PENDING-BUSINESS ${pendingBusiness}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Office;","import React from \"react\";\r\nimport Office from \"./Office\";\r\n\r\nconst OfficeList = ({ result }) => {\r\n  console.log(result);\r\n  if (result.loading) {\r\n    return <div>loading...</div>;\r\n  } else {\r\n    return (\r\n      <div>\r\n        {result.offices.map((office, i) => (\r\n          <Office key={i} {...office} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default OfficeList;","import React, { useEffect, useState } from \"react\";\nimport OfficeList from \"./components/OfficeList\";\nimport config from \"./config.json\";\nimport axios from \"axios\";\n\nconst App = ({ isSSR, ssrData }) => {\n  const [err, setErr] = useState(false);\n  const [result, setResult] = useState({ loading: true, offices: null });\n  useEffect(() => {\n    const getData = async () => {\n      const url = config.BackEndApi.apiurl;\n      try {\n        let result = await axios.get(url);\n        setResult({ loading: false, offices: result.data });\n      } catch (error) {\n        setErr(error);\n      }\n    };\n    getData();\n  }, []);\n  if (err) {\n    return <div>Error {err}</div>;\n  } else {\n    return (\n      <div>\n        <OfficeList result={result} />\n      </div>\n    );\n  }\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}