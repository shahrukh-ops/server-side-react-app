{
  "Resources": {
    "apiHandlerServiceRoleF61AABDA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiHandler/ServiceRole/Resource"
      }
    },
    "apiHandler8027B936": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3dS3Bucket7B336B38"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3dS3VersionKey61BD4CA6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3dS3VersionKey61BD4CA6"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "apiHandlerServiceRoleF61AABDA",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Runtime": "nodejs12.x",
        "Timeout": 5
      },
      "DependsOn": [
        "apiHandlerServiceRoleF61AABDA"
      ],
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiHandler/Resource",
        "aws:asset:path": "asset.1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3d",
        "aws:asset:property": "Code"
      }
    },
    "apiEndpoint154F0C18": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "apiEndpoint"
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Resource"
      }
    },
    "apiEndpointCloudWatchRole75D09583": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/CloudWatchRole/Resource"
      }
    },
    "apiEndpointAccount7ECC9ADA": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiEndpointCloudWatchRole75D09583",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiEndpoint154F0C18"
      ],
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Account"
      }
    },
    "apiEndpointDeploymentDCAB24BF3b0331be4c846eead6f585f72b2c7956": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apiEndpointproxyANY17899448",
        "apiEndpointproxyOPTIONS015491E4",
        "apiEndpointproxy32486DF7",
        "apiEndpointANY36EFCDEA",
        "apiEndpointOPTIONS4ED99C11"
      ],
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Deployment/Resource"
      }
    },
    "apiEndpointDeploymentStageprod8BE4C8B3": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        },
        "DeploymentId": {
          "Ref": "apiEndpointDeploymentDCAB24BF3b0331be4c846eead6f585f72b2c7956"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/DeploymentStage.prod/Resource"
      }
    },
    "apiEndpointOPTIONS4ED99C11": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiEndpoint154F0C18",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/OPTIONS/Resource"
      }
    },
    "apiEndpointproxy32486DF7": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiEndpoint154F0C18",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/{proxy+}/Resource"
      }
    },
    "apiEndpointproxyOPTIONS015491E4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "apiEndpointproxy32486DF7"
        },
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/{proxy+}/OPTIONS/Resource"
      }
    },
    "apiEndpointproxyANYApiPermissionBackEndApiapiEndpoint7A77AC3CANYproxy64BBC562": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apiHandler8027B936",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiEndpoint154F0C18"
              },
              "/",
              {
                "Ref": "apiEndpointDeploymentStageprod8BE4C8B3"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/{proxy+}/ANY/ApiPermission.BackEndApiapiEndpoint7A77AC3C.ANY..{proxy+}"
      }
    },
    "apiEndpointproxyANYApiPermissionTestBackEndApiapiEndpoint7A77AC3CANYproxy4A73507B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apiHandler8027B936",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiEndpoint154F0C18"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/{proxy+}/ANY/ApiPermission.Test.BackEndApiapiEndpoint7A77AC3C.ANY..{proxy+}"
      }
    },
    "apiEndpointproxyANY17899448": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "apiEndpointproxy32486DF7"
        },
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "apiHandler8027B936",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/{proxy+}/ANY/Resource"
      }
    },
    "apiEndpointANYApiPermissionBackEndApiapiEndpoint7A77AC3CANY6C1D28D0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apiHandler8027B936",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiEndpoint154F0C18"
              },
              "/",
              {
                "Ref": "apiEndpointDeploymentStageprod8BE4C8B3"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/ANY/ApiPermission.BackEndApiapiEndpoint7A77AC3C.ANY.."
      }
    },
    "apiEndpointANYApiPermissionTestBackEndApiapiEndpoint7A77AC3CANY170F515D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "apiHandler8027B936",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apiEndpoint154F0C18"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/ANY/ApiPermission.Test.BackEndApiapiEndpoint7A77AC3C.ANY.."
      }
    },
    "apiEndpointANY36EFCDEA": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "apiEndpoint154F0C18",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "apiEndpoint154F0C18"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "apiHandler8027B936",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/apiEndpoint/Default/ANY/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACk1QwU7DMAz9lt3TTB07wI2yiRNoVfkCk5qSrUmq2GFUUf+dJltFT37Ptt57dimf9rLcPMOVCtVetlE5jzJ+MKiLqIiQZ9hp24kGyQWvUBycJfZBsTh82Ro8GGT0iZwCDyG3l+VJJOHYg/lsQcbXYBVrZ9PKGtfojSaa2SQ0GBkb12PWmesk6KGAFIVkTiRg0B0wXmGU8S1Lz35cDfpuvcBKKRcsiyMOvRsN2pxtxdJt2ecGltQvQCjekb9dm4Z3VHv3O/5/YXXkNAnrWpRn2v6UO1k+yt3mTFoXfnbXBmVzq39ntzTTbQEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "BackEndApi/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "AssetParameters1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3dS3Bucket7B336B38": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3d\""
    },
    "AssetParameters1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3dS3VersionKey61BD4CA6": {
      "Type": "String",
      "Description": "S3 key for asset version \"1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3d\""
    },
    "AssetParameters1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3dArtifactHashB96D5C65": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1a3ff0f676d53922cfb2fda1686c2a11147a7168d8e84874bc48227325233f3d\""
    }
  },
  "Outputs": {
    "apiEndpoint10A5FB54": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiEndpoint154F0C18"
            },
            ".execute-api.us-east-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiEndpointDeploymentStageprod8BE4C8B3"
            },
            "/"
          ]
        ]
      }
    },
    "apiurl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiEndpoint154F0C18"
            },
            ".execute-api.us-east-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiEndpointDeploymentStageprod8BE4C8B3"
            },
            "/"
          ]
        ]
      }
    }
  }
}